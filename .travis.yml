# You must sign into travis-ci.org and set the commit hook on your project for travis to
# run on your project. The secure: variable must be generated by running `travis encrypt`
# on a github oauth key that you can generate using curl.

language:
    node_js
node_js:
    - 5.7.0
branches:
    only:
        - master
env:
    global:
        - NPM_CONFIG_PROGRESS="false" # no progress bar for npm speeds up build
        # GH_OAUTH_TOKEN is the oauth token generated as described at
        # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
        #
        # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
        #
        # It must be encrypted using the travis gem
        # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
        #
        # travis encrypt GH_OAUTH_TOKEN=XXXXXXXXXXXXXXX
        #
        # User specific env variables
        - secure: WKY98PaxxLPud88qStM4s5EY+w7gj9abYkirZXXECqyOE2tIOa5dB4/hQS413nn/i7NoYLWkWR2l7lLklW2bjl1aSFVvmAPEDdof28rgELsMIUQO2j1wD1eoxLFo1FQUhW+paZczc5qqz0yjFCw4XEVDmm/ymjUXKWqvDQB0ZORvw6Y4fFvzs1vC8x/ZvnEtSERCLBw8CLguJxRf88LNhHV+Un87IyI/w9fchLx39Xe3McNCy3AqywtS2alLjkcYF0NhqryBAhEMEhjgUItIDdz40e8vZpGO0eH0k0/G8sqMBoXJXieNxYUeYRvpyAqEil2EJbNf8EppooaVFpRUZgtnARe1cdFNO1pe3V+rTu2bwaBHoC1WJDa2rntcnVhCLf0LZrPFE1pWPVQYFlNaFd3WDD+mMM92iPg/S1+jrbNoWxcwWJU+np3LFClzqWKtzl0EE7nRxP1D4QXSXyRDj/EdojG1TksiqIoQIG7e0KMn/vFALlGDlAHuUFpmaOYTLJ7ngElm8Dq2OVhojbCyecJXGhsB2RAgYyDO5ofsQP/8DfFxQ9MfElFBlcx8TrIzyg+N8uJe/2tY8Ti1kPGoMDeQQnr/dFuvYJYMU7CTeiPKkUvbOby7HdJYUEl8DMe20gqBOwVJMDmGy9e1R+NNeUb1JU8lZ6yeATrG9SGVzGs=
        - GH_OWNER=punchtime
        - GH_PROJECT_NAME=web

script:
    - gulp
after_success:
    # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
    - git submodule add -b gh-pages https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} site > /dev/null 2>&1
    - cd site
    - if git checkout gh-pages; then git checkout -b gh-pages; fi
    - git rm -r .
    - cp -R ../dist/* .
    - mkdir .well-known
    - cp ../dist/.well-known/assetlinks.json .well-known/
    - git add -f .
    - git config user.email "punchtimeio@gmail.com"
    - git config user.name "punchtime bot"
    - git commit -am "built via travis [ci skip]"
    # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
    - git push https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} HEAD:gh-pages > /dev/null 2>&1
